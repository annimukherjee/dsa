name: DSA Problem Tracker

on:
  push:
    branches: [main, master]
  workflow_dispatch:

jobs:
  update-tracker:
    runs-on: ubuntu-latest

    steps:
    # 1 â€“ checkout
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    # 2 â€“ Node
    - uses: actions/setup-node@v4
      with:
        node-version: 18

    # 3 â€“ parse commit + update JSON + build site
    - name: Update tracker & build site
      env:
        TZ: UTC
      run: |
        set -e

        # --- extract commit info -------------------------------------------------
        COMMIT_MSG=$(git log -1 --pretty=%s)
        COMMIT_DATE=$(git log -1 --pretty=%ci | cut -d' ' -f1)
        PLATFORM=$(echo "$COMMIT_MSG" | grep -oE '(LeetCode|HackerRank|Codeforces|CodeChef|AtCoder)')
        SLUG=$(echo "$COMMIT_MSG" | sed -E 's/^[0-9]{4}-[0-9]{2}-[0-9]{2}[[:space:]]+(LeetCode|HackerRank|Codeforces|CodeChef|AtCoder)[[:space:]]+//')

        echo "Commit  : $COMMIT_MSG"
        echo "Platform: $PLATFORM"
        echo "Slug    : $SLUG"

        # --- guard - pattern -----------------------------------------------------
        if [[ ! $COMMIT_MSG =~ ^[0-9]{4}-[0-9]{2}-[0-9]{2}[[:space:]]+(LeetCode|HackerRank|Codeforces|CodeChef|AtCoder)[[:space:]]+.+ ]]; then
          echo "Not a DSA commit â€“ exiting."
          exit 0
        fi

        # --- ensure tracker folder ----------------------------------------------
        mkdir -p .github/tracker
        [[ -f .github/tracker/data.json ]] || echo '{"entries":[]}' > .github/tracker/data.json

        # --- node: update JSON + build HTML -------------------------------------
        node <<'NODE'
        const fs = require('fs');
        const path = '.github/tracker/data.json';
        const data = JSON.parse(fs.readFileSync(path,'utf8'));

        const newEntry = {
          date: process.env.COMMIT_DATE,
          platform: process.env.PLATFORM,
          slug:    process.env.SLUG,
          timestamp: new Date().toISOString()
        };

        const idx = data.entries.findIndex(e => e.date === newEntry.date);
        idx >= 0 ? data.entries[idx] = newEntry : data.entries.push(newEntry);

        // sort ascending
        data.entries.sort((a,b)=> new Date(a.date)-new Date(b.date));
        fs.writeFileSync(path, JSON.stringify(data,null,2));

        // --- derive streaks -----------------------------------------------------
        let best = 0, current = 0;
        for (let i = data.entries.length-1; i>=0; i--) {
          if (i===data.entries.length-1 ||
              (new Date(data.entries[i+1].date)-new Date(data.entries[i].date))/86400000 === 1) {
            current++;
          } else break;
        }
        // full scan for best
        let temp = 1;
        for (let i = 1; i < data.entries.length; i++){
          if ((new Date(data.entries[i].date)-new Date(data.entries[i-1].date))/86400000 === 1){
            temp++;
          } else { best = Math.max(best,temp); temp = 1; }
        }
        best = Math.max(best,temp);

        // --- build HTML ---------------------------------------------------------
        const today = new Date();
        const oneYearAgo = new Date(today.getTime()-365*864e5);

        // inline JSON for client-side rendering
        const scriptData =
          `<script>window.DSA_DATA=${JSON.stringify(data.entries)};\
          window.BEST=${best};window.CUR=${current};</script>`;

        const html = `<!DOCTYPE html>
        <html lang="en"><head>
          <meta charset="UTF-8">
          <meta name="viewport" content="width=device-width,initial-scale=1">
          <title>DSA Tracker</title>
          <link rel="stylesheet"
            href="https://cdn.jsdelivr.net/npm/tippy.js@6/dist/tippy.css" />
          <style>
            body{font-family:-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,sans-serif;
                 background:#0d1117;color:#e6edf3;margin:24px}
            h1{font-size:1.8rem;margin-bottom:.2rem}
            .grid{display:flex}
            .col{display:flex;flex-direction:column}
            .day{width:13px;height:13px;margin:2px;border-radius:2px;
                 background:#161b22;transition:transform .15s}
            .day[data-level="1"]{background:#0e4429}
            .day[data-level="2"]{background:#006d32}
            .day[data-level="3"]{background:#26a641}
            .day[data-level="4"]{background:#39d353}
            .day:hover{transform:scale(1.3)}
            .stats{margin-top:20px;font-size:.9rem}
            .badge{padding:4px 8px;border-radius:4px;font-size:.75rem;margin-right:8px}
            .LeetCode{background:#ffa116;color:#000}
            .HackerRank{background:#00ea64;color:#000}
            .Codeforces{background:#1f8acb}
            .CodeChef{background:#ed9b59}
            .AtCoder{background:#2da5cb}
          </style>
        </head><body>
        <h1>ðŸš€ DSA Problem Tracker</h1>
        <div id="grid" class="grid" style="margin-top:12px"></div>

        <div class="stats" id="stats"></div>

        ${scriptData}
        <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2"></script>
        <script src="https://cdn.jsdelivr.net/npm/tippy.js@6"></script>
        <script>
        (()=>{
          const data=window.DSA_DATA;
          const start=new Date();start.setDate(start.getDate()-((52*7)+start.getDay()+1));
          const grid=document.getElementById('grid');

          // build columns (weeks)
          for(let w=0;w<53;w++){
            const col=document.createElement('div');col.className='col';
            for(let d=0;d<7;d++){
              const cell=document.createElement('div');
              const day=new Date(start.getTime()+((w*7)+d)*864e5);
              const iso=day.toISOString().slice(0,10);
              const entry=data.find(e=>e.date===iso);
              const level=entry?1:0; // simple 0/1 for now
              cell.className='day';
              cell.dataset.level=level;
              if(entry){
                cell.dataset.tippyContent=\`\${entry.date}: \${entry.slug}\`;
              }
              col.appendChild(cell);
            }
            grid.appendChild(col);
          }
          tippy('[data-tippy-content]',{theme:'light',arrow:false,duration:[150,100]});

          // stats
          const total=data.length;
          const last30=data.filter(e=>(new Date()-new Date(e.date))<30*864e5).length;
          const platforms=data.reduce((m,e)=>(m[e.platform]=(m[e.platform]||0)+1,m),{});
          const stats=document.getElementById('stats');
          stats.innerHTML=
            \`<p><strong>Total:</strong> \${total} problems</p>
             <p><strong>Last 30 days:</strong> \${last30}</p>
             <p><strong>Current streak:</strong> \${window.CUR} ðŸ”¥ &nbsp;
                <strong>Best streak:</strong> \${window.BEST}</p>\` +
            Object.entries(platforms).map(([p,c])=>
              \`<span class="badge \${p}">\${p}: \${c}</span>\`).join('');
        })();
        </script>
        <div style="margin-top:24px;font-size:12px;color:#7d8590">
          Last updated: ${new Date().toISOString()}
        </div>
        </body></html>`;
        fs.writeFileSync('.github/tracker/index.html',html);
        console.log('âœ… index.html built');
        NODE

    # 4 â€“ commit / push if anything changed
    - name: Commit tracker
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name  "DSA Tracker Bot"
        if [[ -n $(git status --porcelain .github/tracker/) ]]; then
          git add .github/tracker/
          git commit -m "ðŸ“Š Update DSA tracker [skip ci]"
          git push
        else
          echo "No changes to commit."
        fi