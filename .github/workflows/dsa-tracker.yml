# .github/workflows/dsa-tracker.yml
name: DSA Problem Tracker

on:
  push:
    branches: [main, master]
  workflow_dispatch:

jobs:
  update-tracker:
    runs-on: ubuntu-latest

    steps:
    # 1 ‚Äî Checkout repository
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    # 2 ‚Äî Setup Node.js
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    # 3 ‚Äî Parse commit, update JSON, build HTML
    - name: Update tracker & build site
      env:
        TZ: UTC
      run: |
        set -e

        # ---------------------------------------------------------------------
        # Grab the latest commit message
        # ---------------------------------------------------------------------
        COMMIT_MSG=$(git log -1 --pretty=%s)

        # Regex that defines a ‚ÄúDSA commit‚Äù
        DSA_REGEX='^[0-9]{4}-[0-9]{2}-[0-9]{2}[[:space:]]+(LeetCode|HackerRank|Codeforces|CodeChef|AtCoder)[[:space:]]+.+'

        # If commit doesn‚Äôt match, exit cleanly (and let the job succeed)
        if [[ ! $COMMIT_MSG =~ $DSA_REGEX ]]; then
          echo "‚ÑπÔ∏è  Not a DSA commit ‚Äì skipping tracker update."
          exit 0
        fi

        # ---------------------------------------------------------------------
        # Safe to parse now (commands below won‚Äôt error out)
        # ---------------------------------------------------------------------
        COMMIT_DATE=$(git log -1 --pretty=%ci | cut -d' ' -f1)
        PLATFORM=$(echo "$COMMIT_MSG" | grep -oE '(LeetCode|HackerRank|Codeforces|CodeChef|AtCoder)')
        SLUG=$(echo "$COMMIT_MSG" | sed -E \
          's/^[0-9]{4}-[0-9]{2}-[0-9]{2}[[:space:]]+(LeetCode|HackerRank|Codeforces|CodeChef|AtCoder)[[:space:]]+//')

        # Export for Node process.env
        export COMMIT_DATE PLATFORM SLUG

        echo "Commit  : $COMMIT_MSG"
        echo "Platform: $PLATFORM"
        echo "Slug    : $SLUG"

        # ---------------------------------------------------------------------
        # Ensure tracker folder & data file exist
        # ---------------------------------------------------------------------
        mkdir -p .github/tracker
        [[ -f .github/tracker/data.json ]] || echo '{"entries":[]}' > .github/tracker/data.json

        # ---------------------------------------------------------------------
        # Node: update JSON and build index.html
        # ---------------------------------------------------------------------
        node <<'NODE'
        const fs = require('fs');
        const path = '.github/tracker/data.json';
        const data = JSON.parse(fs.readFileSync(path, 'utf8'));

        // ---- add / replace entry -------------------------------------------
        const newEntry = {
          date: process.env.COMMIT_DATE,
          platform: process.env.PLATFORM,
          slug: process.env.SLUG,
          timestamp: new Date().toISOString()
        };

        const idx = data.entries.findIndex(e => e.date === newEntry.date);
        idx >= 0 ? data.entries[idx] = newEntry : data.entries.push(newEntry);

        data.entries.sort((a, b) => new Date(a.date) - new Date(b.date));
        fs.writeFileSync(path, JSON.stringify(data, null, 2));

        // ---- streak calculations -------------------------------------------
        let best = 0, current = 0;
        for (let i = data.entries.length - 1; i >= 0; i--) {
          if (
            i === data.entries.length - 1 ||
            (new Date(data.entries[i + 1].date) - new Date(data.entries[i].date)) / 864e5 === 1
          ) {
            current++;
          } else break;
        }
        let tmp = 1;
        for (let i = 1; i < data.entries.length; i++) {
          if ((new Date(data.entries[i].date) - new Date(data.entries[i - 1].date)) / 864e5 === 1) {
            tmp++;
          } else {
            best = Math.max(best, tmp);
            tmp = 1;
          }
        }
        best = Math.max(best, tmp);

        // ---- build HTML -----------------------------------------------------
        const scriptData =
          `<script>window.DSA_DATA=${JSON.stringify(data.entries)};` +
          `window.BEST=${best};window.CUR=${current};</script>`;

        const html = `<!DOCTYPE html>
        <html lang="en"><head>
          <meta charset="UTF-8">
          <meta name="viewport" content="width=device-width,initial-scale=1">
          <title>DSA Tracker</title>
          <link rel="stylesheet"
                href="https://cdn.jsdelivr.net/npm/tippy.js@6/dist/tippy.css" />
          <style>
            body{font-family:-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,sans-serif;
                 background:#0d1117;color:#e6edf3;margin:24px}
            h1{font-size:1.8rem;margin-bottom:.2rem}
            .grid{display:flex}
            .col{display:flex;flex-direction:column}
            .day{width:13px;height:13px;margin:2px;border-radius:2px;
                 background:#161b22;transition:transform .15s}
            .day[data-level="1"]{background:#0e4429}
            .day[data-level="2"]{background:#006d32}
            .day[data-level="3"]{background:#26a641}
            .day[data-level="4"]{background:#39d353}
            .day:hover{transform:scale(1.3)}
            .stats{margin-top:20px;font-size:.9rem}
            .badge{padding:4px 8px;border-radius:4px;font-size:.75rem;margin-right:8px}
            .LeetCode{background:#ffa116;color:#000}
            .HackerRank{background:#00ea64;color:#000}
            .Codeforces{background:#1f8acb}
            .CodeChef{background:#ed9b59}
            .AtCoder{background:#2da5cb}
          </style>
        </head><body>
          <h1>üöÄ DSA Problem Tracker</h1>
          <div id="grid" class="grid" style="margin-top:12px"></div>
          <div class="stats" id="stats"></div>
          ${scriptData}
          <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2"></script>
          <script src="https://cdn.jsdelivr.net/npm/tippy.js@6"></script>
          <script>
          (() => {
            const data = window.DSA_DATA;
            const start = new Date();
            start.setDate(start.getDate() - ((52 * 7) + start.getDay() + 1));
            const grid = document.getElementById('grid');

            for (let w = 0; w < 53; w++) {
              const col = document.createElement('div');
              col.className = 'col';
              for (let d = 0; d < 7; d++) {
                const cell = document.createElement('div');
                const day = new Date(start.getTime() + ((w * 7) + d) * 864e5);
                const iso = day.toISOString().slice(0, 10);
                const entry = data.find(e => e.date === iso);
                cell.className = 'day';
                cell.dataset.level = entry ? 1 : 0;
                if (entry) {
                  cell.dataset.tippyContent = \`\${entry.date}: \${entry.slug}\`;
                }
                col.appendChild(cell);
              }
              grid.appendChild(col);
            }
            tippy('[data-tippy-content]', { theme: 'light', arrow: false, duration: [150, 100] });

            const total = data.length;
            const last30 = data.filter(e => (new Date() - new Date(e.date)) < 30 * 864e5).length;
            const platforms = data.reduce((m, e) => (m[e.platform] = (m[e.platform] || 0) + 1, m), {});
            document.getElementById('stats').innerHTML =
              \`<p><strong>Total:</strong> \${total} problems</p>
               <p><strong>Last 30 days:</strong> \${last30}</p>
               <p><strong>Current streak:</strong> \${window.CUR} üî• &nbsp;
                  <strong>Best streak:</strong> \${window.BEST}</p>\` +
              Object.entries(platforms).map(([p, c]) =>
                \`<span class="badge \${p}">\${p}: \${c}</span>\`).join('');
          })();
          </script>
          <div style="margin-top:24px;font-size:12px;color:#7d8590">
            Last updated: ${new Date().toISOString()}
          </div>
        </body></html>`;

        fs.writeFileSync('.github/tracker/index.html', html);
        console.log('‚úÖ index.html built');
        NODE

    # 4 ‚Äî Commit & push if anything changed
    - name: Commit tracker updates
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name  "DSA Tracker Bot"

        if [[ -n $(git status --porcelain .github/tracker/) ]]; then
          git add .github/tracker/
          git commit -m "üìä Update DSA tracker [skip ci]"
          git push
          echo "‚úÖ Tracker updated and pushed!"
        else
          echo "‚ÑπÔ∏è  No changes to commit"
        fi